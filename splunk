##splunk query index lookup 

#
##
### THINGS TO **NOT** DO. DO NOT DO!! DANGER!!!
##
#

# The main point of this section is to illuminate the fact that you can slow down Splunk for 
# everyone with bad searches. I think it is usually a per-index danger. 

#Terrible - even with key words after - this pulls all data from all indices:
index=*

#Don't do this if you can help it - wildcard on either side of the field value is slow:
index=proxies somefield=*part*

#DONT UPLOAD/USE GIANT LISTS

#DONT HAVE TOO MANY PANELS IN YOUR DASHBOARD

#DONT EVER SEARCH FOR ALL TIME - GENERALLY LIMIT TO 7 DAYS OR SMALLER, UNLESS YOU KNOW EXACTLY WHAT YOU ARE LOOKING FOR

#DONT MODIFY AN IN PROGRESS SEARCH AND HIT ENTER AGAIN - STOP THE FIRST SEARCH FIRST - IT STILL RUNS AFTER YOU START A NEW ONE OTHERWISE

#DONT OPEN A BUNCH OF DASHBOARDS - EVERY TIME YOU OPEN A DASHBOARD, A SEARCH FOR EVERY PANEL KICKS OFF. 

#
##
### THINGS TO DO - GOOD THINGS - DO THESE.
##
#

#DO STOP JOBS WITH THE SQUARE STOP BUTTON IF THEY ARE TAKING TOO LONG

#
## SIMPLE SEARCHES
#

#List all indices you have access to:
| eventcount summarize=false index=* | dedup index | fields index,count |search count!=0
OR
|tstats count where index=* by index

#List all indices in a sourcetype:
|metadata type=sourcetypes index=someindex

# To see data summaries:
index=blah sourcetype=blahblah field=something NOT otherfield=somethingelse |top limit=100 somefield
index=blah sourcetype=blahblah field=something NOT otherfield=somethingelse |stats count(somefield) by someotherfield, some3rdfield

#To see full data output:
index=blah sourcetype=blahblah field=something
index=blah sourcetype=blahblah field=something NOT otherfield=somethingelse

#To search for IP addresses in a subnet - Splunk support CIDR out of the box:
index=blah sourcetype=blahblah ip=192.168.0.0/24

#
## LOOKUPS - Append this to any search to match against list
#

#Match from Lookup:
[ inputlookup something.csv |field FIELD_FROM_LOOKUP_FILE |rename FIELD_FROM_LOOKUP_FILE as FIELD_TO_MATCH ]

#Match everything BUT fields from lookup:
NOT [ inputlookup something.csv |field FIELD_FROM_LOOKUP_FILE |rename FIELD_FROM_LOOKUP_FILE as FIELD_TO_MATCH ]
#Match one field from lookup and then match another field on another column from lookup:
[ inputlookup something.csv |field FIELD1_FROM_LOOKUP_FILE |rename FIELD1_FROM_LOOKUP_FILE as FIELD1_TO_MATCH ] |search [ inputlookup something.csv |field FIELD2_FROM_LOOKUP_FILE |rename FIELD2_FROM_LOOKUP_FILE as FIELD2_TO_MATCH ]

#On-the-Fly Lookups based on other data:
index=BLAH KEYWORD NOT [|search index=BLAH sourcetype=BLAH earliest=-2d |top host by whatever |fields host] |top something

#
## - EVAL - Changing the names of fields or values, working with Multi-Values
#

#Eval - rename based on event type
|eval NEW_FIELD=case(EXISTING_FIELD, "Content to display") |top NEW_FIELD

#Example (will print a table of action name and ID):
|eval MS_Action=case(EventCode=4624, "User Login") |top MS_Action by EventCode

#Eval Multi-Value in same field (Selects the second value in the field below)
|eval User_Account=mvindex(Account_Name,1) |search User_Account="superman"

#
## - RAW - Creating fields from Regex raw extraction mid search
#

#This makes the field 'USERID' only what comes after the domain where the User ID is DOMAIN\userid
index=WINDOWS_INDEX EventID=4624 |rex field=_raw ".*\\\\(?<USERID>[a-zA-Z0-9\_\-\$]+)" |top USERID limit=100
"Source Network Address: (?<Source_Network_IP>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})"
|rex field=Message "Client Address:  ::ffff:(?<Client_IP>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})"

#Raw for IPv4 address at the beginning of the line:
|rex field=_raw "^(?<IPADDR>[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})"

#
## MISC
#

#Windows Firewall outbound traffic to non-USA
index=windowsindex EventCode=5156 Direction=Outbound |iplocation Destination_Address |search NOT Country="United States"

#CIDR - Splunk supports by default:
index=firewalls destination_ip!=192.168.0.0/16
index=firewalls NOT [inputlookup internal_cidr.csv |fields cidr |rename cidr as destination_ip]

#License Volume:
 index=_internal  source=*license_usage.log* type="Usage" earliest=-30d@d latest=@d
  | fields _time, pool, idx, b, h
 |search h="g*"
  | eval idx=if(len(idx)=0 OR isnull(idx),"(UNKNOWN)",idx)
 |eval h=if(len(h)=0 OR isnull(h),"(UNKNOWN)",h)
  | bin _time span=1d
  | stats sum(b) as b by _time, pool, h
  | stats sum(b) AS volume by h, _time
  | stats avg(volume) AS avgVolume max(volume) AS maxVolume by h
  | eval avgVolumeGB=round(avgVolume/1024/1024/1024,3)
  | eval maxVolumeGB=round(maxVolume/1024/1024/1024,3)
  | fields h, avgVolumeGB, maxVolumeGB
  | rename avgVolumeGB AS "average" maxVolumeGB AS "peak" h AS "host"

#
## STATS AND DATA VOLUME
#

#Check highest producers of traffic:
index=cisco_ips
| fields src_bytes src_ip _time
| stats sum(src_bytes) as total_bytes by src_ip
| sort - total_bytes
| eval total_mb=round(total_bytes/1048576, 2)
| fields - total_bytes

#Check highest producers of traffic:
index=cisco_ips dest_port=53
| fields src_bytes src_ip _time
| stats sum(src_bytes) as total_bytes by src_ip
| sort - total_bytes
| eval total_mb=round(total_bytes/1048576, 2)
| fields - total_bytes

#Check Counts of DNS requests:
index=cisco_ips dest_port=53
| fields src_ip |stats count by src_ip |sort - count

#Check IFACE usage over time:
index=cisco_ips
| fields src_bytes iface_egress iface_ingress _time
| stats sum(src_bytes) as total_bytes by iface_ingress, iface_egress
| sort - total_bytes
| eval total_mb=round(total_bytes/1048576, 2)
| fields - total_bytes

#
## GOOD REFERENCE
#

https://wiki.splunk.com/Things_I_wish_I_knew_then

http://docs.splunk.com/Documentation/Splunk/7.2.1/Search/Writebettersearches

https://gosplunk.com/

#
## Hunting
#

#Malicious Inbox Rules
index=o365* Operation=New-InboxRule ("Parameters{}.Name"=*Subject* AND "Parameters{}.Value"=*Delete*)

#find blocked SSH to internet
index=firewall-* dest_port=22 action=blocked NOT(dest_ip=10.0.0.0/8 OR dest_ip=172.16.0.0/12 OR dest_ip=192.168.0.0/16) (src_ip=10.0.0.0/8 OR src_ip=172.16.0.0/12 OR src_ip=192.168.0.0/16)|top index by dest_ip, dest_port, src_ip, action

#SSH not on port 22:
index=firewall-* dest_port!=22 service=SSH

#DNS Tunnelling/TXT Method
index=firewall sourcetype=fgt_log qtype=TXT subtype="dns-response" NOT(qname=*.sk OR qname=_* OR qname=*.dscsc.net OR qname=*.dsnu.net OR qname=*.dsadns.net OR qname=*.sophosxl.net OR qname=*.pf-d.ca OR qname=*.lookout.com OR qname=*.amazonses.com OR qname=*.mcafee.com OR qname=*.outlook.com OR qname=*.amazon.com OR qname=*.onmicrosoft.com OR qname=*.logmein-gateway.com) |where len(qname)>30 |top qname by srcip

#
## Time Thresholds and Bucketing
#

| bucket _time span=1h
| stats count(dest_port) as num_events by src _time
| streamstats window=5 mean(num_events) as moving_avg by src
| eval spike=if(num_events > (2 * moving_avg),1,0)

...
|transaction fieldsomething startswith=blah=something endswith=blah2=something2 maxspan=6m maxpause=3m
